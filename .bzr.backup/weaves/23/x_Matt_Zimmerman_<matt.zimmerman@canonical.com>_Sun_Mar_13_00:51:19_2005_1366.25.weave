# bzr weave file v5
i
1 00551c22769935b3822a7b807b3e707fe36855ea
n Arch-1:matt.zimmerman@canonical.com%casper--main--0--base-0

i
1 0baa718bac2f1c92c5777c91380ee3f1217d1126
n Arch-1:matt.zimmerman@canonical.com--2004%casper--main--0--base-0

i 1
1 8abfe1542e28890e11d4d2b8f5ddf1ad631ea105
n Arch-1:colin.watson@canonical.com--2005%casper--translations--0--patch-17

i 0
1 8e7dfa1f7bd18e27d6e9784d9d55e98614ca4599
n Arch-1:matt.zimmerman@canonical.com%casper--main--0--patch-25

i 1
1 00551c22769935b3822a7b807b3e707fe36855ea
n Arch-1:matt.zimmerman@canonical.com--2004%casper--main--0--patch-24

i 4 0
1 8e7dfa1f7bd18e27d6e9784d9d55e98614ca4599
n Arch-1:matt.zimmerman@canonical.com%casper--breezy--0--patch-2

i 3
1 8abfe1542e28890e11d4d2b8f5ddf1ad631ea105
n Arch-1:matt.zimmerman@canonical.com%casper--main--0--patch-26

i 5
1 00551c22769935b3822a7b807b3e707fe36855ea
n Arch-1:matt.zimmerman@canonical.com%casper--breezy--0--patch-6

i 6
1 864538129f01845e81a2892bb46babfa86362f73
n Arch-1:matt.zimmerman@canonical.com%casper--main--0--patch-29

i 7
1 9608aa0e22b479c1a566e833f494bcb87df31e38
n Arch-1:colin.watson@canonical.com--2005%casper--vtfix--0--patch-1

i 7
1 9608aa0e22b479c1a566e833f494bcb87df31e38
n Arch-1:matt.zimmerman@canonical.com%casper--breezy--0--patch-7

i 10
1 fddfceeaa930660f06d7105a2ff2b8934ca916b1
n Arch-1:matt.zimmerman@canonical.com%casper--breezy--0--patch-8

i 11
1 8abfe1542e28890e11d4d2b8f5ddf1ad631ea105
n Arch-1:matt.zimmerman@canonical.com%casper--breezy--0--patch-9

i 12
1 864538129f01845e81a2892bb46babfa86362f73
n Arch-1:colin.watson@canonical.com--2005%casper--fixes--0--patch-1

i 13 8
1 864538129f01845e81a2892bb46babfa86362f73
n mdz@mizar-20051205230117-c327e75be767f237

w
{ 0
. #!/bin/sh
. 
. set -e
. 
. . /usr/share/debconf/confmodule
. 
. db_get casper/enable
. [ "$RET" = true ] || exit 0
. 
. update_progress() {
.     hook="$1"
. 
.     base=$(basename $hook | sed -e 's/^[0-9]*//')
. 
.     # Try to find a nice description for this step
.     if  ! db_progress INFO casper-udeb/progress/$base && \
.         ! db_progress INFO prebaseconfig/progress/$base && \
.         ! db_progress INFO base-installer/progress/$base; then
. 
.         #db_subst casper-udeb/progress/fallback name $base
.         db_progress casper-udeb/progress/fallback
.     fi
.     db_progress STEP 1
. }
. 
. pre_hooks=$(ls /usr/lib/casper/pre.d/* | grep '/[a-zA-Z0-9_-]*$')
. post_hooks=$(ls /usr/lib/casper/post.d/* | grep '/[a-zA-Z0-9_-]*$')
. num_hooks=$(echo "$pre_hooks $post_hooks" | wc -w)
. 
. db_progress START 0 $num_hooks casper-udeb/progress/title
. 
. for hook in $pre_hooks; do
.     update_progress $hook
. 
.     if ! $hook; then
.         db_subst casper-udeb/step-failed step "$hook"
[ 8
[ 13
.         db_input casper-udeb/step-failed || true
] 8
{ 8
.         db_input critical casper-udeb/step-failed || true
}
] 13
{ 13
.         db_input critical casper-udeb/step-failed || true
}
.         exit 1
.     fi
. done
. 
. # A proper LANG setting is necessary for, e.g., xserver-xorg.config
. db_get debian-installer/locale
. LANG="$RET"
. export LANG
. 
. cd /target
. pivot_root . initrd
. 
. # At this point, the only way out is through
. set +e
. 
. # syslog is no longer a useful option
. LOGDIR=/var/log/casper
. test -d $LOGDIR || mkdir -p $LOGDIR
. exec 1>$LOGDIR/post.log 2>&1
. 
. mount -t proc proc /proc
. mount -t sysfs sysfs /sys
. 
. PATH="$PATH:/initrd/bin:/initrd/usr/bin:/initrd/sbin:/initrd/usr/sbin:"
. 
. for hook in $post_hooks; do
.     update_progress $hook
. 
.     /initrd/$hook
. done
. 
[ 3
[ 5
. # XXX VC #1 is a mess, so clear and switch over to VC #2 for now
. TERM=linux clear > /dev/tty2
. echo "Starting Ubuntu..." > /dev/tty2
. chvt 2
] 3
{ 3
[ 6
. if [ ! -e /dev/usplash_fifo ]; then
.     # XXX VC #1 is a mess, so clear and switch over to VC #2 for now
.     TERM=linux clear > /dev/tty2
.     echo "Starting Ubuntu..." > /dev/tty2
.     chvt 2
. fi
}
] 5
{ 5
[ 7
. if [ ! -e /dev/usplash_fifo ]; then
.     # XXX VC #1 is a mess, so clear and switch over to VC #2 for now
.     TERM=linux clear > /dev/tty2
.     echo "Starting Ubuntu..." > /dev/tty2
.     chvt 2
. fi
}
] 6
{ 6
. # Kill bterm so that we can use VC #1. Make sure we don't get killed
. # ourselves in the process.
. trap '' HUP
. killall bterm
. 
. TERM=linux reset > /dev/tty1
. TERM=linux clear > /dev/tty1
. echo "Loading, please wait..." > /dev/tty1
}
] 7
{ 7
[ 9
[ 10
. # XXX VC #1 is a mess, so clear and switch over to VC #2 for now
. TERM=linux clear > /dev/tty2
. echo "Starting Ubuntu..." > /dev/tty2
. chvt 2
}
] 9
{ 9
. # Kill bterm so that we can use VC #1. Make sure we don't get killed
. # ourselves in the process.
. trap '' HUP
. killall bterm
. 
. TERM=linux clear > /dev/tty1
. echo "Starting Ubuntu..." > /dev/tty1
}
] 10
{ 10
. # Kill bterm so that we can use VC #1. Make sure we don't get killed
. # ourselves in the process.
. trap '' HUP
. killall bterm
. 
[ 11
. TERM=linux clear > /dev/tty1
. echo "Starting Ubuntu..." > /dev/tty1
}
] 11
{ 11
. TERM=linux reset > /dev/tty1
{ 12
. TERM=linux clear > /dev/tty1
}
. echo "Loading, please wait..." > /dev/tty1
}
. 
. # Signal init to re-exec itself.  Since we've pivoted into the new
. # root, this will be the real init, rather than the busybox one, and
. # will read the real /etc/inittab.  /proc must be mounted!
. kill -USR1 1
. 
. # We should be killed by init soon, so wait around for it to happen
. sleep 60
. 
. # Something went very wrong, and it's far too late to do anything about it
. echo 'Casper fell off the end!' >&2
. 
. exit 1
}
{ 1
[ 5
. #!/bin/sh
. 
. set -e
. 
. . /usr/share/debconf/confmodule
. 
. db_get casper/enable
. [ "$RET" = true ] || exit 0
. 
. update_progress() {
.     hook="$1"
. 
.     base=$(basename $hook | sed -e 's/^[0-9]*//')
. 
.     # Try to find a nice description for this step
.     if  ! db_progress INFO casper-udeb/progress/$base && \
.         ! db_progress INFO prebaseconfig/progress/$base && \
.         ! db_progress INFO base-installer/progress/$base; then
. 
.         #db_subst casper-udeb/progress/fallback name $base
.         db_progress casper-udeb/progress/fallback
.     fi
.     db_progress STEP 1
. }
. 
. pre_hooks=$(ls /usr/lib/casper/pre.d/* | grep '/[a-zA-Z0-9_-]*$')
. post_hooks=$(ls /usr/lib/casper/post.d/* | grep '/[a-zA-Z0-9_-]*$')
. num_hooks=$(echo "$pre_hooks $post_hooks" | wc -w)
. 
. db_progress START 0 $num_hooks casper-udeb/progress/title
. 
. for hook in $pre_hooks; do
.     update_progress $hook
. 
.     if ! $hook; then
.         db_subst casper-udeb/step-failed step "$hook"
.         db_input casper-udeb/step-failed || true
.         exit 1
.     fi
. done
. 
. # A proper LANG setting is necessary for, e.g., xserver-xorg.config
. db_get debian-installer/locale
. LANG="$RET"
. export LANG
. 
. cd /target
. pivot_root . initrd
. 
. # At this point, the only way out is through
. set +e
. 
. # syslog is no longer a useful option
. LOGDIR=/var/log/casper
. test -d $LOGDIR || mkdir -p $LOGDIR
. exec 1>$LOGDIR/post.log 2>&1
. 
. mount -t proc proc /proc
. mount -t sysfs sysfs /sys
. 
. PATH="$PATH:/initrd/bin:/initrd/usr/bin:/initrd/sbin:/initrd/usr/sbin:"
. 
. for hook in $post_hooks; do
.     update_progress $hook
. 
.     /initrd/$hook
. done
. 
[ 2
. # XXX VC #1 is a mess, so clear and switch over to VC #2 for now
. TERM=linux clear > /dev/tty2
. echo "Starting Ubuntu..." > /dev/tty2
. chvt 2
] 2
{ 2
. # Kill bterm so that we can use VC #1. Make sure we don't get killed
. # ourselves in the process.
. trap '' HUP
. killall bterm
. 
. TERM=linux reset > /dev/tty1
. TERM=linux clear > /dev/tty1
. echo "Loading, please wait..." > /dev/tty1
}
. 
. # Signal init to re-exec itself.  Since we've pivoted into the new
. # root, this will be the real init, rather than the busybox one, and
. # will read the real /etc/inittab.  /proc must be mounted!
. kill -USR1 1
. 
[ 2
[ 4
. # We should be killed by init soon after the post-hooks run, so wait around for it to happen
] 2
{ 2
. # We should be killed by init soon, so wait around for it to happen
}
] 4
{ 4
. # We should be killed by init soon, so wait around for it to happen
}
. sleep 60
. 
. # Something went very wrong, and it's far too late to do anything about it
. echo 'Casper fell off the end!' >&2
. 
. exit 1
}
] 5
W
